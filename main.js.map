{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-19',\r\n  headers: {\r\n    authorization: 'ff55c8a5-9e93-41a4-b092-8c36fdb087a0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nfunction getResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nexport const getInfoProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const editProfileInfo = ({name, about}) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const addNewCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: cardData.name,\r\n      link: cardData.link\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getLikesCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteUserCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const updateAvatarUser = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n","import { getLikesCard, deleteLikeCard } from './api.js';\r\n\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\nexport function createCard(cardData, userId, addLikeCard, openPopupImage) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  \r\n  cardElement.id = cardData._id;\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  \r\n\r\n  if (cardData.likes.length) {\r\n    cardLikeValue.textContent = cardData.likes.length;\r\n  };\r\n\r\n  if (cardData.likes.some((like) => like._id === userId)) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  };\r\n\r\n\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.classList.add('card__delete-button_active')\r\n    deleteButton.addEventListener(\"click\", function (evt) {\r\n      const newCard = evt.target.closest('.card');\r\n      deleteCard(newCard);\r\n    }); \r\n  } else {\r\n    deleteButton.remove();\r\n  };\r\n  \r\n\r\n  cardLikeButton.addEventListener('click', (evt) =>  addLikeCard(evt, cardData._id));\r\n\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage);\r\n\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\nexport function deleteCard(cardData) {\r\n  cardData.remove();\r\n}\r\n\r\n\r\nexport function addLikeCard(cardData, cardId) {\r\n  const cardLikeButton = cardData.closest('.card__description');\r\n  const cardLikeValue = cardLikeButton.querySelector('.card__like-value');\r\n\r\n  if(cardData.classList.contains('card__like-button_is-active')){\r\n    deleteLikeCard(cardId, \"DELETE\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  } else {\r\n    getLikesCard(cardId, \"PUT\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\n\r\nfunction checkLikeById(id, array) {\r\n  const idArray = array.map(cardData => cardData._id)\r\n  return idArray.includes(id)\r\n};\r\n","export function openModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEsc);\r\n  document.addEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nexport function closeModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEsc);\r\n  document.removeEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nfunction closeModalEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupToClose = document.querySelector('.popup_is-opened');\r\n    closeModal(popupToClose);\r\n  };\r\n};\r\n\r\n\r\nfunction overlayClickModal(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closeModal(evt.target);\r\n  };\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      \r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}; \r\n\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector)\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector))\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig)\r\n};\r\n\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import '../pages/index.css';\r\n//import { initialCards } from './cards.js';\r\nimport { createCard, deleteCard, addLikeCard } from './card.js';\r\nimport { openModal, closeModal } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { getInfoProfile, getInitialCards, editProfileInfo, addNewCard, deleteUserCard, updateAvatarUser } from './api.js';\r\n\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst formProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = formProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formProfile.querySelector('.popup__input_type_description');\r\n\r\nconst formCard = popupNewCard.querySelector('.popup__form');\r\nconst inputCardName = formCard.querySelector('.popup__input_type_card-name');\r\nconst inputCardUrl =  formCard.querySelector('.popup__input_type_url');\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDscription = document.querySelector('.profile__description');\r\n\r\nconst popupImages = document.querySelector('.popup_type_image');\r\nconst imageLink = popupImages.querySelector('.popup__image');\r\nconst imageName = popupImages.querySelector('.popup__caption');\r\n\r\nconst popupDeleteCard = document.querySelector('.popup_delete-image');\r\nconst popupDeleteCardButton = popupDeleteCard.querySelector('.popup__button');\r\n\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAvatar = popupAvatar.querySelector('.popup__form');\r\nconst inputAvaUrl = formAvatar.querySelector('.popup__input_type_url');\r\n\r\nlet userId = '';\r\nconst cardId = null;\r\n\r\nconst  validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n// загрузка данных\r\nfunction renderLoading(isLoading, form) {\r\n  const activeButton = form.querySelector('.popup__button');\r\n  activeButton.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\r\n};\r\n\r\n\r\n// открытие модального окна картинки\r\nfunction openPopupImage(cardData) {\r\n  openModal(popupImages);\r\n  imageLink.src = cardData.target.src;\r\n  imageLink.alt = cardData.target.alt;\r\n  imageName.textContent = cardData.target.alt;\r\n};\r\n\r\ncardsContainer.addEventListener('click', openPopupImage);\r\n\r\n\r\n// открытие модального окна редактирования профиля (карандаш)\r\nprofileEditButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDscription.textContent;\r\n  clearValidation(popupEdit, validationConfig);\r\n});\r\n\r\n\r\n// редактирование данных профиля в модальном окне\r\nfunction processProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formProfile);\r\n\r\n  editProfileInfo({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDscription.textContent = res.about;\r\n\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formProfile);\r\n    })\r\n};\r\n\r\n\r\n// сохранение отредактированных данных в профиле\r\nformProfile.addEventListener('submit', processProfileSubmit);\r\n\r\n\r\n// модальное окно изменения аватара\r\nprofileAvatar.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n\r\n// установка аватара в модальном окне\r\nfunction processAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formAvatar);\r\n  \r\n  updateAvatarUser(inputAvaUrl.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`\r\n\r\n      closeModal(popupAvatar)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formAvatar);\r\n    })\r\n};\r\n\r\n\r\nformAvatar.addEventListener('submit', processAvatarSubmit);\r\n\r\n\r\n// открытие модального окна добавления картинки (+)\r\naddButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupNewCard);\r\n  clearValidation(popupNewCard, validationConfig);\r\n});\r\n\r\n\r\n// получаем новую картинку в список картинок\r\n function processNewCardSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const newCard = {\r\n    name: inputCardName.value,\r\n    link: inputCardUrl.value,\r\n  }\r\n  renderLoading(true, formCard);\r\n\r\n  addNewCard(newCard)\r\n    .then((res) => {\r\n      cardsContainer.prepend(createCard(\r\n        res, \r\n        res.owner._id, \r\n        openPopupImage,\r\n        deleteCard,  \r\n        addLikeCard,\r\n      ));\r\n      \r\n      closeModal(popupNewCard);\r\n    })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(false, formCard);\r\n  })\r\n};\r\n\r\n\r\nformCard.addEventListener('submit', processNewCardSubmit);\r\n\r\n\r\nfunction openModalDeleteCard(cardData) {\r\n  openModal(popupDeleteCard);\r\n  popupDeleteCardButton.dataset.cardId = cardData._id;\r\n};\r\n\r\n\r\nfunction processDeleteCardClick(evt) {\r\n  evt.preventDefault();\r\n\r\n  // Присваиваем ID удаляемой карточки в попап подтверждения\r\n  cardId = popupDeleteCardButton.dataset.cardId;\r\n  // Удаляем с сервера\r\n  deleteUserCard(cardId)\r\n    .then(() => {\r\n      // Через ID на карточках в списке HTML удаляем со страницы\r\n      const deleteCard = document.getElementById(cardId);\r\n\r\n      deleteCard.remove();\r\n      popupDeleteCardButton.dataset.cardId = \"\";\r\n      closePopup(popupDeleteCard);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n\r\npopupDeleteCardButton.addEventListener(\"click\", processDeleteCardClick);\r\n\r\n\r\n// закрытие модальных окон (All)\r\npopupCloseButtons.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    const popupToClose = item.closest('.popup');\r\n    closeModal(popupToClose);\r\n  });\r\n});\r\n\r\n\r\nPromise.all([getInfoProfile(), getInitialCards()])\r\n  .then(([user, newCard]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDscription.textContent = user.about;\r\n    profileAvatar.style.backgroundImage = `url(${user.avatar})`;\r\n    userId = newCard._id;\r\n    newCard.forEach((cardData) => {\r\n      cardsContainer.append(\r\n        createCard(cardData, openPopupImage, openModalDeleteCard, addLikeCard, userId));\r\n      });\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n\r\n  enableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","userId","addLikeCard","openPopupImage","cardElement","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikeValue","id","_id","textContent","name","src","link","alt","likes","length","some","like","classList","add","owner","addEventListener","evt","deleteCard","target","closest","remove","cardId","contains","fetch","method","then","deleteLikeCard","toggle","catch","error","console","log","getLikesCard","openModal","popup","closeModalEsc","overlayClickModal","closeModal","removeEventListener","key","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClass","errorClass","clearValidation","buttonElement","submitButtonSelector","inputList","Array","from","querySelectorAll","inputSelector","forEach","toggleButtonState","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsContainer","profileEditButton","addButton","popupEdit","popupAvatar","popupNewCard","popupCloseButtons","formProfile","nameInput","jobInput","formCard","inputCardName","inputCardUrl","profileTitle","profileDscription","popupImages","imageLink","imageName","popupDeleteCard","popupDeleteCardButton","profileAvatar","formAvatar","inputAvaUrl","formSelector","renderLoading","isLoading","form","openModalDeleteCard","dataset","preventDefault","value","_ref","about","body","JSON","stringify","finally","avatar","style","backgroundImage","newCard","prepend","_readOnlyError","getElementById","closePopup","item","all","_ref2","user","append","patternMismatch","setCustomValidity","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}
{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-19',\r\n  headers: {\r\n    authorization: 'ff55c8a5-9e93-41a4-b092-8c36fdb087a0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nfunction getResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nexport const getInfoProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const editProfileInfo = ({name, about}) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const addNewCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newCard.name,\r\n      link: newCard.link,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getLikesCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardData._id}/likes`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteUserCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardData._id}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteLikeCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardData._id}/likes`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const updateAvatarUser = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n","import { getLikesCard, deleteUserCard, deleteLikeCard } from './api.js';\r\n\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\nexport function createCard(cardData, userId, deleteCard, openPopupImage, addLikeCard) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  \r\n  cardElement.id = cardData._id;\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardLikeValue.textContent = cardData.likes.length;\r\n  \r\n\r\n\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.addEventListener('click', () => {\r\n      deleteCard(cardElement, cardId);\r\n    }); \r\n  } else {\r\n    deleteButton.remove();\r\n  };\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage(cardData.name, cardData.link));\r\n  \r\n\r\n  if (cardData.likes.some((user) => user._id === userId)) {\r\n    cardLikeButton.classList.add('card__like-button_is-active');\r\n  } else {\r\n    cardLikeButton.classList.remove('card__like-button_is-active');\r\n  }\r\n\r\n\r\n  cardLikeButton.addEventListener('click', () =>  addLikeCard(cardLikeValue, cardId, likesValue));\r\n\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\nexport function deleteCard(cardData, cardId) {\r\n  deleteUserCard(cardId)\r\n    .then(() => {\r\n      cardData.target.closest('.places__item').remove()\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n};\r\n\r\n\r\nexport function addLikeCard(cardData, cardId) {\r\n  const cardLikeButton = cardData.closest('.card__description');\r\n  const cardLikeValue = cardLikeButton.querySelector('.card__like-value');\r\n\r\n  if(cardData.classList.contains('card__like-button_is-active')){\r\n    deleteLikeCard(cardId, \"DELETE\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  } else {\r\n    getLikesCard(cardId, \"PUT\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\n\r\nfunction checkLikeById(id, array) {\r\n  const idArray = array.map(cardData => cardData._id)\r\n  return idArray.includes(id)\r\n};\r\n","export function openModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEsc);\r\n  document.addEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nexport function closeModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEsc);\r\n  document.removeEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nfunction closeModalEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupToClose = document.querySelector('.popup_is-opened');\r\n    closeModal(popupToClose);\r\n  };\r\n};\r\n\r\n\r\nfunction overlayClickModal(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closeModal(evt.target);\r\n  };\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      \r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}; \r\n\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector)\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector))\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig)\r\n};\r\n\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import '../pages/index.css';\r\n//import { initialCards } from './cards.js';\r\n//import * as cardElement from './card.js';\r\nimport { createCard, deleteCard, addLikeCard } from './card.js';\r\nimport { openModal, closeModal } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { getInfoProfile, getInitialCards, editProfileInfo, addNewCard, updateAvatarUser } from './api.js';\r\n\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst formProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = formProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formProfile.querySelector('.popup__input_type_description');\r\n\r\nconst formCard = popupNewCard.querySelector('.popup__form');\r\nconst inputCardName = formCard.querySelector('.popup__input_type_card-name');\r\nconst inputCardUrl =  formCard.querySelector('.popup__input_type_url');\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDscription = document.querySelector('.profile__description');\r\n\r\nconst popupImages = document.querySelector('.popup_type_image');\r\nconst imageLink = popupImages.querySelector('.popup__image');\r\nconst imageName = popupImages.querySelector('.popup__caption');\r\n\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAvatar = popupAvatar.querySelector('.popup__form');\r\nconst inputAvaUrl = formAvatar.querySelector('.popup__input_type_url');\r\n\r\n//let userId = '';\r\n\r\n\r\nconst  validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n// загрузка данных\r\nfunction renderLoading(isLoading, form) {\r\n  const activeButton = form.querySelector('.popup__button');\r\n  activeButton.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\r\n};\r\n\r\n\r\n// открытие модального окна картинки\r\nfunction openPopupImage(cardData) {\r\n  openModal(popupImages);\r\n  imageLink.src = cardData.target.src;\r\n  imageLink.alt = cardData.target.closest('.card').textContent;\r\n  imageName.textContent = cardData.target.closest('.card').textContent;\r\n};\r\n\r\ncardsContainer.addEventListener('click', openPopupImage);\r\n\r\n\r\n// открытие модального окна редактирования профиля (карандаш)\r\nprofileEditButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDscription.textContent;\r\n  clearValidation(popupEdit, validationConfig);\r\n});\r\n\r\n\r\n// редактирование данных профиля в модальном окне\r\nfunction processProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formProfile);\r\n\r\n  editProfileInfo({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDscription.textContent = res.about;\r\n\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formProfile);\r\n    })\r\n};\r\n\r\n\r\n// сохранение отредактированных данных в профиле\r\nformProfile.addEventListener('submit', processProfileSubmit);\r\n\r\n\r\n// модальное окно изменения аватара\r\nprofileAvatar.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n\r\n// установка аватара в модальном окне\r\nfunction processAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formAvatar);\r\n  \r\n  updateAvatarUser(inputAvaUrl.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`\r\n\r\n      closeModal(popupAvatar)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formAvatar);\r\n    })\r\n};\r\n\r\n\r\nformAvatar.addEventListener('submit', processAvatarSubmit);\r\n\r\n\r\n// открытие модального окна добавления картинки (+)\r\naddButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupNewCard);\r\n  clearValidation(popupNewCard, validationConfig);\r\n});\r\n\r\n\r\n// получаем новоую картинку в список картинок\r\n function processNewCardSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const newCard = {\r\n    name: inputCardName.value,\r\n    link: inputCardUrl.value,\r\n  }\r\n  renderLoading(true, formCard);\r\n\r\n  addNewCard(newCard)\r\n    .then((res) => {\r\n      cardsContainer.prepend(createCard(\r\n        res, \r\n        res.owner._id, \r\n        openPopupImage,\r\n        deleteCard,  \r\n        addLikeCard,\r\n      ));\r\n      \r\n      closeModal(popupNewCard);\r\n    })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(false, formCard);\r\n  })\r\n};\r\n\r\n\r\nformCard.addEventListener('submit', processNewCardSubmit);\r\n\r\n\r\n// закрытие модальных окон (All)\r\npopupCloseButtons.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    const popupToClose = item.closest('.popup');\r\n    closeModal(popupToClose);\r\n  });\r\n});\r\n\r\n\r\nPromise.all([getInfoProfile(), getInitialCards()])\r\n  .then(([user, newCard]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDscription.textContent = user.about;\r\n    profileAvatar.style.backgroundImage = `url(${user.avatar})`;\r\n    newCard.forEach((cardData) => {\r\n      cardsContainer.append(\r\n        createCard(cardData, user._id, openPopupImage, deleteCard, addLikeCard));\r\n      });\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n\r\n  enableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","userId","deleteCard","openPopupImage","addLikeCard","cardElement","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikeValue","id","_id","textContent","name","src","link","alt","likes","length","owner","addEventListener","cardId","remove","some","user","classList","add","likesValue","fetch","method","then","deleteUserCard","target","closest","catch","error","console","log","contains","deleteLikeCard","toggle","getLikesCard","openModal","popup","closeModalEsc","overlayClickModal","closeModal","removeEventListener","evt","key","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClass","errorClass","clearValidation","buttonElement","submitButtonSelector","inputList","Array","from","querySelectorAll","inputSelector","forEach","toggleButtonState","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsContainer","profileEditButton","addButton","popupEdit","popupAvatar","popupNewCard","popupCloseButtons","formProfile","nameInput","jobInput","formCard","inputCardName","inputCardUrl","profileTitle","profileDscription","popupImages","imageLink","imageName","profileAvatar","formAvatar","inputAvaUrl","formSelector","renderLoading","isLoading","form","preventDefault","value","_ref","about","body","JSON","stringify","finally","avatar","style","backgroundImage","newCard","addNewCard","prepend","item","all","_ref2","append","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}
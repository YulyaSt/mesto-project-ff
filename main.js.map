{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-19',\r\n  headers: {\r\n    authorization: 'ff55c8a5-9e93-41a4-b092-8c36fdb087a0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nfunction getResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nexport const getInfoProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const editProfileInfo = ({name, about}) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const addNewCard = ({name, link}) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      link: link,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getLikesCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardData._id}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteUserCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardData._id}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteLikeCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardData._id}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const updateAvatarUser = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n","import { getLikesCard, deleteUserCard, deleteLikeCard } from './api.js';\r\n\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\nexport function createCard(cardData, userId, deleteCard, openPopupImage, addLikeCard) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  const likesValue = cardData.likes;\r\n  const cardId = cardData._id;\r\n\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardLikeValue.textContent = likesValue.length;\r\n  \r\n\r\n\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.addEventListener('click', () => {\r\n      deleteCard(cardElement, cardId);\r\n    }); \r\n  } else {\r\n    deleteButton.remove();\r\n  };\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage(cardData.name, cardData.link));\r\n  \r\n\r\n  if (cardData.likes.some((user) => user._id === userId)) {\r\n    cardLikeButton.classList.add('card__like-button_is-active');\r\n  } else {\r\n    cardLikeButton.classList.remove('card__like-button_is-active');\r\n  }\r\n\r\n\r\n  cardLikeButton.addEventListener('click', () =>  addLikeCard(cardLikeValue, cardId, likesValue));\r\n\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\nexport function deleteCard(cardData, cardId) {\r\n  deleteUserCard(cardId)\r\n    .then(() => {\r\n      cardData.target.closest('.places__item').remove()\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n};\r\n\r\n\r\nexport function addLikeCard(cardData, cardId) {\r\n  const cardLikeButton = cardData.closest('.card__description');\r\n  const cardLikeValue = cardLikeButton.querySelector('.card__like-value');\r\n\r\n  if(cardData.classList.contains('card__like-button_is-active')){\r\n    deleteLikeCard(cardId, \"DELETE\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  } else {\r\n    getLikesCard(cardId, \"PUT\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\n\r\nfunction checkLikeById(id, array) {\r\n  const idArray = array.map(cardData => cardData._id)\r\n  return idArray.includes(id)\r\n};\r\n","export function openModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEsc);\r\n  document.addEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nexport function closeModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEsc);\r\n  document.removeEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nfunction closeModalEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupToClose = document.querySelector('.popup_is-opened');\r\n    closeModal(popupToClose);\r\n  };\r\n};\r\n\r\n\r\nfunction overlayClickModal(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closeModal(evt.target);\r\n  };\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      \r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}; \r\n\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector)\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector))\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig)\r\n};\r\n\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import '../pages/index.css';\r\n//import { initialCards } from './cards.js';\r\nimport { createCard, deleteCard, addLikeCard } from './card.js';\r\nimport { openModal, closeModal } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { getInfoProfile, getInitialCards, editProfileInfo, addNewCard, updateAvatarUser } from './api.js';\r\n\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst formProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = formProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formProfile.querySelector('.popup__input_type_description');\r\n\r\nconst formCard = popupNewCard.querySelector('.popup__form');\r\nconst inputCardName = formCard.querySelector('.popup__input_type_card-name');\r\nconst inputCardUrl =  formCard.querySelector('.popup__input_type_url');\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDscription = document.querySelector('.profile__description');\r\n\r\nconst popupImages = document.querySelector('.popup_type_image');\r\nconst imageLink = popupImages.querySelector('.popup__image');\r\nconst imageName = popupImages.querySelector('.popup__caption');\r\n\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAvatar = popupAvatar.querySelector('.popup__form');\r\nconst inputAvaUrl = formAvatar.querySelector('.popup__input_type_url');\r\n\r\nconst userId = {\r\n  _id: '',\r\n};\r\n\r\n\r\nconst  validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n// загрузка данных\r\nfunction renderLoading(isLoading, form) {\r\n  const activeButton = form.querySelector('.popup__button');\r\n  activeButton.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\r\n};\r\n\r\n\r\n// открытие модального окна картинки\r\nfunction openPopupImage(cardData) {\r\n  openModal(popupImages);\r\n  imageLink.src = cardData.target.src;\r\n  imageLink.alt = cardData.target.closest('.card').textContent;\r\n  imageName.textContent = cardData.target.closest('.card').textContent;\r\n};\r\n\r\ncardsContainer.addEventListener('click', openPopupImage);\r\n\r\n\r\n// открытие модального окна редактирования профиля (карандаш)\r\nprofileEditButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDscription.textContent;\r\n  clearValidation(popupEdit, validationConfig);\r\n});\r\n\r\n\r\n// редактирование данных профиля в модальном окне\r\nfunction processProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formProfile);\r\n\r\n  editProfileInfo({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDscription.textContent = res.about;\r\n\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formProfile);\r\n    })\r\n};\r\n\r\n\r\n// сохранение отредактированных данных в профиле\r\nformProfile.addEventListener('submit', processProfileSubmit);\r\n\r\n\r\n// модальное окно изменения аватара\r\nprofileAvatar.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n\r\n// установка аватара в модальном окне\r\nfunction processAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formAvatar);\r\n  \r\n  updateAvatarUser(inputAvaUrl.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`\r\n\r\n      closeModal(popupAvatar)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formAvatar);\r\n    })\r\n};\r\n\r\n\r\nformAvatar.addEventListener('submit', processAvatarSubmit);\r\n\r\n\r\n// открытие модального окна добавления картинки (+)\r\naddButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupNewCard);\r\n  clearValidation(popupNewCard, validationConfig);\r\n});\r\n\r\n\r\n// получаем новоую картинку в список картинок\r\n function processNewCardSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const newCard = {\r\n    name: inputCardName.value,\r\n    link: inputCardUrl.value,\r\n  }\r\n  renderLoading(true, formCard);\r\n\r\n  addNewCard(newCard)\r\n    .then((res) => {\r\n      cardsContainer.prepend(createCard(\r\n        res, \r\n        res.owner._id, \r\n        openPopupImage,\r\n        deleteCard,  \r\n        addLikeCard,\r\n      ));\r\n      \r\n      closeModal(popupNewCard);\r\n    })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(false, formCard);\r\n  })\r\n};\r\n\r\n\r\nformCard.addEventListener('submit', processNewCardSubmit);\r\n\r\n\r\n// закрытие модальных окон (All)\r\npopupCloseButtons.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    const popupToClose = item.closest('.popup');\r\n    closeModal(popupToClose);\r\n  });\r\n});\r\n\r\n\r\nfunction displayInitialCards(userId, cardsArray) {\r\n  if (Array.isArray(cardsArray)) {\r\n    cardsArray.forEach((cardData) => {\r\n      const cardElement = createCard(cardData, userId, openPopupImage, deleteCard, addLikeCard);\r\n      cardsContainer.append(cardElement);\r\n    });\r\n  };\r\n};\r\n\r\n\r\nPromise.all([getInfoProfile(), getInitialCards()])\r\n  .then(([user, initialCards]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDscription.textContent = user.about;\r\n    profileAvatar.style.backgroundImage = `url(${user.avatar})`;\r\n    displayInitialCards(user, initialCards);\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n\r\n  enableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","userId","deleteCard","openPopupImage","addLikeCard","cardElement","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikeValue","likesValue","likes","cardId","_id","textContent","name","src","link","alt","length","owner","addEventListener","remove","some","user","classList","add","fetch","method","then","deleteUserCard","target","closest","catch","error","console","log","contains","deleteLikeCard","toggle","getLikesCard","openModal","popup","closeModalEsc","overlayClickModal","closeModal","removeEventListener","evt","key","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","clearValidation","buttonElement","submitButtonSelector","inputList","Array","from","querySelectorAll","inputSelector","forEach","toggleButtonState","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsContainer","profileEditButton","addButton","popupEdit","popupAvatar","popupNewCard","popupCloseButtons","formProfile","nameInput","jobInput","formCard","inputCardName","inputCardUrl","profileTitle","profileDscription","popupImages","imageLink","imageName","profileAvatar","formAvatar","inputAvaUrl","formSelector","renderLoading","isLoading","form","preventDefault","value","_ref","about","body","JSON","stringify","finally","avatar","style","backgroundImage","_ref2","newCard","prepend","item","all","cardsArray","initialCards","isArray","append","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}
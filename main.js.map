{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-19',\r\n  headers: {\r\n    authorization: 'ff55c8a5-9e93-41a4-b092-8c36fdb087a0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nfunction getResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nexport const getInfoProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const editProfileInfo = ({name, about}) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const addNewCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: cardData.name,\r\n      link: cardData.link\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getLikesCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteUserCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const updateAvatarUser = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n","import { deleteUserCard, getLikesCard, deleteLikeCard } from './api.js';\r\n\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\nexport function createCard(cardData, userId, addLikeCard, openPopupImage) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  \r\n  cardElement.dataset.cardId = cardData._id;\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  \r\n\r\n  if (cardData.likes.length) {\r\n    cardLikeValue.textContent = cardData.likes.length;\r\n  };\r\n\r\n  if (cardData.likes.some((like) => like._id === userId)) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  };\r\n\r\n\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.classList.add('card__delete-button_active')\r\n    deleteButton.addEventListener(\"click\", function (evt) {\r\n      const newCard = evt.target.closest('.card');\r\n      deleteCard(newCard);\r\n    }); \r\n  } else {\r\n    deleteButton.remove();\r\n  };\r\n  \r\n\r\n  cardLikeButton.addEventListener('click', (evt) =>  addLikeCard(evt, cardId));\r\n\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage);\r\n\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\n/*export function deleteCard(cardData) {\r\n  cardData.remove();\r\n};*/\r\n\r\n\r\nexport const deleteCard = (cardElement) => { //Функцтя удаления карточки из DOM  + с сервера\r\n  deleteUserCard(cardElement.dataset.cardId) // Вызываем функцию удаления карточки с сервера\r\n    .then(() => {\r\n      cardElement.remove();\r\n      console.log(\"Карточка успешно удалена\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n\r\nexport function addLikeCard(cardData, cardId) {\r\n  const cardLikeButton = cardData.closest('.card__description');\r\n  const cardLikeValue = cardLikeButton.querySelector('.card__like-value');\r\n\r\n  if(cardData.classList.contains('card__like-button_is-active')){\r\n    deleteLikeCard(cardId, \"DELETE\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  } else {\r\n    getLikesCard(cardId, \"PUT\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\n\r\nfunction checkLikeById(id, array) {\r\n  const idArray = array.map(cardData => cardData._id)\r\n  return idArray.includes(id)\r\n};\r\n","export function openModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEsc);\r\n  document.addEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nexport function closeModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEsc);\r\n  document.removeEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nfunction closeModalEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupToClose = document.querySelector('.popup_is-opened');\r\n    closeModal(popupToClose);\r\n  };\r\n};\r\n\r\n\r\nfunction overlayClickModal(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closeModal(evt.target);\r\n  };\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      \r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}; \r\n\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector)\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector))\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig)\r\n};\r\n\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import '../pages/index.css';\r\n//import { initialCards } from './cards.js';\r\nimport { createCard, deleteCard, addLikeCard } from './card.js';\r\nimport { openModal, closeModal } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { getInfoProfile, getInitialCards, editProfileInfo, addNewCard, updateAvatarUser } from './api.js';\r\n\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst formProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = formProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formProfile.querySelector('.popup__input_type_description');\r\n\r\n/*const formCard = popupNewCard.querySelector('.popup__form');\r\nconst inputCardName = formCard.querySelector('.popup__input_type_card-name');\r\nconst inputCardUrl =  formCard.querySelector('.popup__input_type_url');*/\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDscription = document.querySelector('.profile__description');\r\n\r\nconst popupImages = document.querySelector('.popup_type_image');\r\nconst popupImageLink = popupImages.querySelector('.popup__image');\r\nconst popupImageName = popupImages.querySelector('.popup__caption');\r\nconst newCard = document.forms['new-place']; //форма добавления карточки нового места\r\nconst formCard = newCard.querySelector('.popup__button');\r\nconst imageName = newCard['place-name']; // инпут добавления названия нового места\r\nconst imageLink = newCard.link; //инпут добавления ссылки на фотографию\r\n\r\nconst popupDeleteCard = document.querySelector('.popup_delete-image');\r\nconst popupDeleteCardButton = popupDeleteCard.querySelector('.popup__button');\r\n\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAvatar = popupAvatar.querySelector('.popup__form');\r\nconst inputAvaUrl = formAvatar.querySelector('.popup__input_type_url');\r\n\r\n/*const userId = {\r\n  _id: '',\r\n};*/\r\n\r\nlet cardToDelete = null;\r\n\r\n\r\nconst  validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n// загрузка данных\r\nfunction renderLoading(isLoading, form) {\r\n  const activeButton = form.querySelector('.popup__button');\r\n  activeButton.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\r\n};\r\n\r\n\r\n// открытие модального окна картинки\r\nfunction openPopupImage(cardElement) {\r\n  if (cardElement.target.classList.contains(\"card__image\")) {\r\n    popupImageLink.src = cardElement.target.src;\r\n    popupImageLink.alt = cardElement.target.alt;\r\n    popupImageName.textContent = cardElement.target.alt;\r\n\r\n    openModal(popupImages);\r\n  }\r\n};\r\n\r\ncardsContainer.addEventListener('click', openPopupImage);\r\n\r\n\r\n// открытие модального окна редактирования профиля (карандаш)\r\nprofileEditButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDscription.textContent;\r\n  clearValidation(popupEdit, validationConfig);\r\n});\r\n\r\n\r\n// редактирование данных профиля в модальном окне\r\nfunction processProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formProfile);\r\n\r\n  editProfileInfo({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDscription.textContent = res.about;\r\n\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formProfile);\r\n    })\r\n};\r\n\r\n\r\n// сохранение отредактированных данных в профиле\r\nformProfile.addEventListener('submit', processProfileSubmit);\r\n\r\n\r\n// модальное окно изменения аватара\r\nprofileAvatar.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n\r\n// установка аватара в модальном окне\r\nfunction processAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formAvatar);\r\n  \r\n  updateAvatarUser(inputAvaUrl.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`\r\n\r\n      closeModal(popupAvatar)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formAvatar);\r\n    })\r\n};\r\n\r\n\r\nformAvatar.addEventListener('submit', processAvatarSubmit);\r\n\r\n\r\n// открытие модального окна добавления картинки (+)\r\naddButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  openModal(popupNewCard);\r\n  clearValidation(popupNewCard, validationConfig);\r\n});\r\n\r\n\r\n// получаем новую картинку в список картинок\r\n function processNewCardSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const newCard = {\r\n    name: imageName.value,\r\n    link: imageLink.value,\r\n  }\r\n  renderLoading(true, formCard);\r\n\r\n  addNewCard(newCard)\r\n    .then((res) => {\r\n      cardsContainer.prepend(createCard(\r\n        res, \r\n        res.owner._id, \r\n        openPopupImage,\r\n        processDeleteCardClick,\r\n        addLikeCard,\r\n      ));\r\n      \r\n      closeModal(popupNewCard);\r\n      newCard.reset();\r\n    })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(false, formCard);\r\n  })\r\n};\r\n\r\n\r\nformCard.addEventListener('submit', processNewCardSubmit);\r\n\r\n\r\nfunction processDeleteCardClick (cardElement) {\r\n  cardToDelete = cardElement;\r\n  openModal(popupDeleteCard);\r\n}\r\n\r\n\r\npopupDeleteCardButton.addEventListener(\"click\", () => {\r\n  deleteCard(cardToDelete);\r\n  closeModal(popupDeleteCard);\r\n})\r\n\r\n/*function openModalDeleteCard(cardData) {\r\n  openModal(popupDeleteCard);\r\n  cardToDelete = evt.target.closest('.card');;\r\n};\r\n\r\n\r\nfunction processDeleteCardClick(cardData, deleteModal) {\r\n  deleteUserCard(cardData.id)\r\n  .then(() => {\r\n    deleteCard(cardData);\r\n    closeModal(deleteModal);\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n\r\n\r\npopupDeleteCardButton.addEventListener(\"click\", () => processDeleteCardClick(cardToDelete, popupDeleteCard));*/\r\n\r\n\r\n// закрытие модальных окон (All)\r\npopupCloseButtons.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    const popupToClose = item.closest('.popup');\r\n    closeModal(popupToClose);\r\n  });\r\n});\r\n\r\n\r\nPromise.all([getInfoProfile(), getInitialCards()])\r\n  .then(([user, newCard]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDscription.textContent = user.about;\r\n    profileAvatar.style.backgroundImage = `url(${user.avatar})`;\r\n    newCard.forEach((cardData) => {\r\n      cardsContainer.append(\r\n        createCard(cardData, user._id, openPopupImage, processDeleteCardClick, addLikeCard));\r\n      });\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n\r\n  enableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","userId","addLikeCard","openPopupImage","cardElement","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikeValue","dataset","cardId","_id","textContent","name","src","link","alt","likes","length","some","like","classList","add","owner","addEventListener","evt","newCard","target","closest","deleteCard","remove","fetch","method","then","deleteUserCard","console","log","catch","error","openModal","popup","closeModalEsc","overlayClickModal","closeModal","removeEventListener","key","contains","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","clearValidation","buttonElement","submitButtonSelector","inputList","Array","from","querySelectorAll","inputSelector","forEach","toggleButtonState","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsContainer","profileEditButton","addButton","popupEdit","popupAvatar","popupNewCard","popupCloseButtons","formProfile","nameInput","jobInput","profileTitle","profileDscription","popupImages","popupImageLink","popupImageName","forms","formCard","imageName","imageLink","popupDeleteCard","popupDeleteCardButton","profileAvatar","formAvatar","inputAvaUrl","cardToDelete","formSelector","renderLoading","isLoading","form","processDeleteCardClick","preventDefault","value","_ref","about","body","JSON","stringify","finally","avatar","style","backgroundImage","prepend","reset","item","all","_ref2","user","append","patternMismatch","setCustomValidity","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}
{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-19',\r\n  headers: {\r\n    authorization: 'ff55c8a5-9e93-41a4-b092-8c36fdb087a0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nfunction getResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nexport const getInfoProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const editProfileInfo = ({name, about}) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const addNewCard = ({name, link}) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      link: link,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getLikesCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardData._id}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteUserCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardData._id}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteLikeCard = (cardData) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardData._id}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const updateAvatarUser = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n","import { getLikesCard, deleteLikeCard } from './api.js';\r\n\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\nexport function createCard(cardData, userId, deleteCard, openPopupImage, addLikeCard) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  const cardId = cardData._id;\r\n\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardLikeValue.textContent = cardData.likes.length;\r\n  \r\n\r\n\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.addEventListener('click', () => {\r\n      deleteCard(cardElement, cardData._id);\r\n    }); \r\n  } else {\r\n    deleteButton.remove();\r\n  };\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage(cardData.name, cardData.link));\r\n  \r\n\r\n  if (cardData.likes.some((user) => user._id === userId)) {\r\n    cardLikeButton.classList.add('card__like-button_is-active');\r\n  } else {\r\n    cardLikeButton.classList.remove('card__like-button_is-active');\r\n  }\r\n\r\n\r\n  cardLikeButton.addEventListener('click', () =>  addLikeCard(cardLikeValue, cardId, likesValue));\r\n\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\nexport function addLikeCard(cardData, cardId) {\r\n  const cardLikeButton = cardData.closest('.card__description');\r\n  const cardLikeValue = cardLikeButton.querySelector('.card__like-value');\r\n\r\n  if(cardData.classList.contains('card__like-button_is-active')){\r\n    deleteLikeCard(cardId, \"DELETE\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  } else {\r\n    getLikesCard(cardId, \"PUT\")\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardData.classList.toggle('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\n\r\nfunction checkLikeById(id, array) {\r\n  const idArray = array.map(cardData => cardData._id)\r\n  return idArray.includes(id)\r\n};\r\n","export function openModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEsc);\r\n  document.addEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nexport function closeModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEsc);\r\n  document.removeEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nfunction closeModalEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupToClose = document.querySelector('.popup_is-opened');\r\n    closeModal(popupToClose);\r\n  };\r\n};\r\n\r\n\r\nfunction overlayClickModal(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closeModal(evt.target);\r\n  };\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      \r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}; \r\n\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector)\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector))\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig)\r\n};\r\n\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import '../pages/index.css';\r\n//import { initialCards } from './cards.js';\r\nimport { createCard, addLikeCard } from './card.js';\r\nimport { openModal, closeModal } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { getInfoProfile, getInitialCards, editProfileInfo, addNewCard, deleteUserCard, updateAvatarUser } from './api.js';\r\n\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst formProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = formProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formProfile.querySelector('.popup__input_type_description');\r\n\r\nconst formCard = popupNewCard.querySelector('.popup__form');\r\nconst inputCardName = formCard.querySelector('.popup__input_type_card-name');\r\nconst inputCardUrl =  formCard.querySelector('.popup__input_type_url');\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDscription = document.querySelector('.profile__description');\r\n\r\nconst popupImages = document.querySelector('.popup_type_image');\r\nconst imageLink = popupImages.querySelector('.popup__image');\r\nconst imageName = popupImages.querySelector('.popup__caption');\r\n\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAvatar = popupAvatar.querySelector('.popup__form');\r\nconst inputAvaUrl = formAvatar.querySelector('.popup__input_type_url');\r\n\r\nconst userId = {\r\n  _id: '',\r\n};\r\n\r\n\r\nconst  validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n// загрузка данных\r\nfunction renderLoading(isLoading, form) {\r\n  const activeButton = form.querySelector('.popup__button');\r\n  activeButton.textContent = isLoading ? \"Сохранение...\" : \"Сохранить\";\r\n};\r\n\r\n\r\n// открытие модального окна картинки\r\nfunction openPopupImage(cardData) {\r\n  openModal(popupImages);\r\n  imageLink.src = cardData.target.src;\r\n  imageLink.alt = cardData.target.closest('.card').textContent;\r\n  imageName.textContent = cardData.target.closest('.card').textContent;\r\n};\r\n\r\ncardsContainer.addEventListener('click', openPopupImage);\r\n\r\n\r\n// открытие модального окна редактирования профиля (карандаш)\r\nprofileEditButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDscription.textContent;\r\n  clearValidation(popupEdit, validationConfig);\r\n});\r\n\r\n\r\n// редактирование данных профиля в модальном окне\r\nfunction processProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formProfile);\r\n\r\n  editProfileInfo({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDscription.textContent = res.about;\r\n\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formProfile);\r\n    })\r\n};\r\n\r\n\r\n// сохранение отредактированных данных в профиле\r\nformProfile.addEventListener('submit', processProfileSubmit);\r\n\r\n\r\n// модальное окно изменения аватара\r\nprofileAvatar.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n\r\n// установка аватара в модальном окне\r\nfunction processAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formAvatar);\r\n  \r\n  updateAvatarUser(inputAvaUrl.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`\r\n\r\n      closeModal(popupAvatar)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formAvatar);\r\n    })\r\n};\r\n\r\n\r\nformAvatar.addEventListener('submit', processAvatarSubmit);\r\n\r\n\r\n// открытие модального окна добавления картинки (+)\r\naddButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n  openModal(popupNewCard);\r\n  clearValidation(popupNewCard, validationConfig);\r\n});\r\n\r\n\r\n// получаем новоую картинку в список картинок\r\n function processNewCardSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const newCard = {\r\n    name: inputCardName.value,\r\n    link: inputCardUrl.value,\r\n  }\r\n  renderLoading(true, formCard);\r\n\r\n  addNewCard(newCard)\r\n    .then((res) => {\r\n      cardsContainer.prepend(createCard(\r\n        res, \r\n        res.owner._id, \r\n        openPopupImage,\r\n        deleteCard,  \r\n        addLikeCard,\r\n      ));\r\n      \r\n      closeModal(popupNewCard);\r\n    })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(false, formCard);\r\n  })\r\n};\r\n\r\n\r\nformCard.addEventListener('submit', processNewCardSubmit);\r\n\r\n\r\nfunction deleteCard(cardElement, cardData) {\r\n  deleteUserCard(cardData)\r\n    .then(() => {\r\n      cardElement.remove()\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n};\r\n\r\n\r\n// закрытие модальных окон (All)\r\npopupCloseButtons.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    const popupToClose = item.closest('.popup');\r\n    closeModal(popupToClose);\r\n  });\r\n});\r\n\r\n\r\nfunction displayInitialCards(userId, cardsArray) {\r\n  if (Array.isArray(cardsArray)) {\r\n    cardsArray.forEach((cardData) => {\r\n      const cardElement = createCard(cardData, userId, openPopupImage, deleteCard, addLikeCard);\r\n      cardsContainer.append(cardElement);\r\n    });\r\n  };\r\n};\r\n\r\n\r\nPromise.all([getInfoProfile(), getInitialCards()])\r\n  .then(([user, initialCards]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDscription.textContent = user.about;\r\n    profileAvatar.style.backgroundImage = `url(${user.avatar})`;\r\n    displayInitialCards(user, initialCards);\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n\r\n  enableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","userId","deleteCard","openPopupImage","addLikeCard","cardElement","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikeValue","cardId","_id","textContent","name","src","link","alt","likes","length","owner","addEventListener","remove","some","user","classList","add","likesValue","closest","contains","fetch","method","then","deleteLikeCard","toggle","catch","error","console","log","getLikesCard","openModal","popup","closeModalEsc","overlayClickModal","closeModal","removeEventListener","evt","key","target","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","clearValidation","buttonElement","submitButtonSelector","inputList","Array","from","querySelectorAll","inputSelector","forEach","toggleButtonState","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsContainer","profileEditButton","addButton","popupEdit","popupAvatar","popupNewCard","popupCloseButtons","formProfile","nameInput","jobInput","formCard","inputCardName","inputCardUrl","profileTitle","profileDscription","popupImages","imageLink","imageName","profileAvatar","formAvatar","inputAvaUrl","formSelector","renderLoading","isLoading","form","deleteUserCard","preventDefault","value","_ref","about","body","JSON","stringify","finally","avatar","style","backgroundImage","_ref2","newCard","prepend","item","all","cardsArray","initialCards","isArray","append","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}
{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-19',\r\n  headers: {\r\n    authorization: 'ff55c8a5-9e93-41a4-b092-8c36fdb087a0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nfunction getResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nexport const getInfoProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const editProfileInfo = ({name, about}) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const addNewCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newCard.name,\r\n      link: newCard.link\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getLikesCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteUserCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const updateAvatarUser = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n","import { getLikesCard, deleteLikeCard } from './api.js';\r\n\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\nfunction createCard(cardData, userId, openPopupImage, deleteCard, addLikeCard) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  const cardId = cardData._id;\r\n  \r\n  cardElement.dataset.cardId = cardData._id;\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardLikeValue.textContent = cardData.likes.length;\r\n  \r\n\r\n  if (cardData.likes.some((like) => like._id === userId)) {\r\n    cardLikeButton.classList.add('card__like-button_is-active');\r\n  };\r\n\r\n\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.classList.add('card__delete-button_active')\r\n    deleteButton.addEventListener(\"click\", () => {\r\n      deleteCard(cardId, cardElement);\r\n    }); \r\n  } else {\r\n    deleteButton.remove();\r\n  };\r\n  \r\n\r\n  cardLikeButton.addEventListener('click', (evt) =>  addLikeCard(evt, cardId, cardLikeValue));\r\n\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    openPopupImage(cardData);\r\n  });\r\n\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\nfunction addLikeCard (evt, cardId, cardLikeValue) {\r\n  const like = evt.target.classList.contains(\"card__like-button_is-active\") ? deleteLikeCard : getLikesCard;\r\n  like(cardId) \r\n    .then((cardData) => {\r\n      cardLikeValue.textContent = cardData.likes.length; \r\n      evt.target.classList.toggle(\"card__like-button_is-active\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n\r\nexport { createCard, addLikeCard };\r\n","export function openModal(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEsc);\r\n  popup.addEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nexport function closeModal(popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEsc);\r\n  popup.removeEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nfunction closeModalEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupToClose = document.querySelector('.popup_is-opened');\r\n    closeModal(popupToClose);\r\n  };\r\n};\r\n\r\n\r\nfunction overlayClickModal(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closeModal(evt.target);\r\n  };\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      \r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}; \r\n\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n};\r\n\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import '../pages/index.css';\r\nimport { createCard, addLikeCard } from './card.js';\r\nimport { openModal, closeModal } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { getInfoProfile, getInitialCards, editProfileInfo, addNewCard, updateAvatarUser, deleteUserCard } from './api.js';\r\n\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst formProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = formProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formProfile.querySelector('.popup__input_type_description');\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDscription = document.querySelector('.profile__description');\r\n\r\nconst popupImages = document.querySelector('.popup_type_image');\r\nconst popupImageLink = popupImages.querySelector('.popup__image');\r\nconst popupImageName = popupImages.querySelector('.popup__caption');\r\n\r\nconst newCard = document.forms['new-place'];\r\nconst imageName = newCard['place-name'];\r\nconst imageLink = newCard.link;\r\n\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAvatar = popupAvatar.querySelector('.popup__form');\r\nconst inputAvaUrl = formAvatar.querySelector('.popup__input_type_url');\r\n\r\nconst popupDeleteCard = document.querySelector('.popup_type_delete-image');\r\nconst formDelete = popupDeleteCard.querySelector('.popup__form');\r\n\r\nlet submitButton = null;\r\nlet cardToDelete = null;\r\nlet elementCardToDelete = null;\r\n\r\n\r\nconst  validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n// загрузка данных\r\nfunction renderLoading(isLoading, button) {\r\n  if (isLoading) {\r\n    button.textContent = \"Сохранение...\";\r\n  } else {\r\n    button.textContent = \"Сохранить\";\r\n  }\r\n};\r\n\r\n\r\n// открытие модального окна картинки\r\nfunction openPopupImage(imageURL, imageAlt, title) {\r\n    popupImageLink.src = imageURL;\r\n    popupImageLink.alt = imageAlt;\r\n    popupImageName.textContent = title;\r\n    openModal(popupImages);\r\n};\r\n\r\n\r\n// открытие модального окна редактирования профиля (карандаш)\r\nprofileEditButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  openModal(popupEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDscription.textContent;\r\n  clearValidation(popupEdit, validationConfig);\r\n});\r\n\r\n\r\n// редактирование данных профиля в модальном окне\r\nfunction processProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  submitButton = formProfile.querySelector('.popup__button');\r\n  renderLoading(true, submitButton);\r\n\r\n  editProfileInfo({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDscription.textContent = res.about;\r\n\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, submitButton);\r\n    });\r\n};\r\n\r\n\r\n// сохранение отредактированных данных в профиле\r\nformProfile.addEventListener('submit', processProfileSubmit);\r\n\r\n\r\n// модальное окно изменения аватара\r\nprofileAvatar.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n\r\n// установка аватара в модальном окне\r\nfunction processAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  submitButton = formAvatar.querySelector('.popup__button');\r\n  renderLoading(true, submitButton);\r\n  \r\n  updateAvatarUser(inputAvaUrl.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`;\r\n\r\n      closeModal(popupAvatar);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, submitButton);\r\n    });\r\n};\r\n\r\n\r\nformAvatar.addEventListener('submit', processAvatarSubmit);\r\n\r\n\r\n// открытие модального окна добавления картинки (+)\r\naddButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  openModal(popupNewCard);\r\n  clearValidation(popupNewCard, validationConfig);\r\n});\r\n\r\n\r\n// получаем новую картинку в список картинок\r\n function processNewCardSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  submitButton = newCard.querySelector('.popup__button');\r\n  const newCardObject = {\r\n    name: imageName.value,\r\n    link: imageLink.value,\r\n  }\r\n\r\n  renderLoading(true, submitButton);\r\n\r\n  addNewCard(newCardObject)\r\n    .then((res) => {\r\n      cardsContainer.prepend(createCard(\r\n        res, \r\n        res.owner._id, \r\n        openPopupImage,\r\n        deleteCardPopup,\r\n        addLikeCard,\r\n      ));\r\n      \r\n      closeModal(popupNewCard);\r\n      newCard.reset();\r\n    })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(false, submitButton);\r\n  });\r\n};\r\n\r\n\r\nnewCard.addEventListener('submit', processNewCardSubmit);\r\n\r\n\r\n// Открытие модального окна удаления карточки\r\nfunction deleteCardPopup(cardId, cardElement) {\r\n  openModal(popupDeleteCard);\r\n  cardToDelete = cardId;\r\n  elementCardToDelete = cardElement;\r\n};\r\n\r\n\r\n// Удаление карточки после подтверждения \r\nfunction processDeleteCardSubmit(evt){\r\n  evt.preventDefault();\r\n\r\n  deleteUserCard(cardToDelete)\r\n    .then(() => {\r\n      elementCardToDelete.remove();\r\n      closeModal(popupDeleteCard);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n};\r\n\r\n\r\nformDelete.addEventListener(\"submit\", processDeleteCardSubmit);\r\n\r\n\r\n// закрытие модальных окон (All)\r\npopupCloseButtons.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    const popupToClose = item.closest('.popup');\r\n    closeModal(popupToClose);\r\n  });\r\n});\r\n\r\n\r\nPromise.all([getInfoProfile(), getInitialCards()])\r\n  .then(([user, newCard]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDscription.textContent = user.about;\r\n    profileAvatar.style.backgroundImage = `url(${user.avatar})`;\r\n    newCard.forEach((cardData) => {\r\n      cardsContainer.append(\r\n        createCard(cardData, user._id, openPopupImage, deleteCardPopup, addLikeCard));\r\n      });\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n\r\nenableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","getLikesCard","cardId","fetch","method","then","deleteLikeCard","cardTemplate","document","querySelector","content","createCard","cardData","userId","openPopupImage","deleteCard","addLikeCard","cardElement","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikeValue","_id","dataset","textContent","name","src","link","alt","likes","length","some","like","classList","add","owner","addEventListener","remove","evt","target","contains","toggle","catch","error","console","log","openModal","popup","closeModalEsc","overlayClickModal","closeModal","removeEventListener","key","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","clearValidation","buttonElement","submitButtonSelector","inputList","Array","from","querySelectorAll","inputSelector","forEach","toggleButtonState","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsContainer","profileEditButton","addButton","popupEdit","popupAvatar","popupNewCard","popupCloseButtons","formProfile","nameInput","jobInput","profileTitle","profileDscription","popupImages","popupImageLink","popupImageName","newCard","forms","imageName","imageLink","profileAvatar","formAvatar","inputAvaUrl","popupDeleteCard","formDelete","submitButton","cardToDelete","elementCardToDelete","formSelector","renderLoading","isLoading","button","imageURL","imageAlt","title","deleteCardPopup","preventDefault","value","_ref","about","body","JSON","stringify","finally","avatar","style","backgroundImage","newCardObject","addNewCard","prepend","reset","item","closest","all","_ref2","user","append","patternMismatch","setCustomValidity","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}
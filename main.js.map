{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-19',\r\n  headers: {\r\n    authorization: 'ff55c8a5-9e93-41a4-b092-8c36fdb087a0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nfunction getResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n\r\nexport const getInfoProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const editProfileInfo = ({name, about}) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const addNewCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: newCard.name,\r\n      link: newCard.link\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const getLikesCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteUserCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const deleteLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(getResponse);\r\n};\r\n\r\n\r\nexport const updateAvatarUser = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then(getResponse);\r\n};\r\n","import { deleteUserCard, getLikesCard, deleteLikeCard } from './api.js';\r\n\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\nexport function createCard(cardData, userId, openPopupImage) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  \r\n  cardElement.dataset.cardId = cardData._id;\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  \r\n\r\n  if (cardData.likes.length) {\r\n    cardLikeValue.textContent = cardData.likes.length;\r\n  };\r\n\r\n  if (checkLikeById(cardData, userId)) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  };\r\n\r\n\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.classList.add('card__delete-button_active')\r\n    deleteButton.addEventListener(\"click\", function (evt) {\r\n      const newCard = evt.target.closest('.card');\r\n      deleteCard(newCard);\r\n    }); \r\n  } else {\r\n    deleteButton.remove();\r\n  };\r\n  \r\n\r\n  cardLikeButton.addEventListener('click', () =>  addLikeCard(cardData, userId, cardElement));\r\n\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage);\r\n\r\n\r\n  return cardElement;\r\n};\r\n\r\n\r\nexport const deleteCard = (cardElement) => {\r\n  deleteUserCard(cardElement.dataset.cardId)\r\n    .then(() => {\r\n      cardElement.remove();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n\r\nexport function addLikeCard(cardData, userId, cardElement) {\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikeValue = cardElement.querySelector('.card__like-value');\r\n  if(checkLikeById(cardData, userId)){\r\n    deleteLikeCard(cardData)\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardLikeButton.classList.remove('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  } else {\r\n    getLikesCard(cardData)\r\n      .then(res => {\r\n        cardLikeValue.textContent = res.likes.length;\r\n        cardLikeButton.classList.add('card__like-button_is-active');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n};\r\n\r\n\r\nfunction checkLikeById(id, array) {\r\n  const idArray = array.map(cardData => cardData._id)\r\n  return idArray.includes(id)\r\n};\r\n","export function openModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEsc);\r\n  document.addEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nexport function closeModal(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEsc);\r\n  document.removeEventListener('mousedown', overlayClickModal);\r\n};\r\n\r\n\r\nfunction closeModalEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupToClose = document.querySelector('.popup_is-opened');\r\n    closeModal(popupToClose);\r\n  };\r\n};\r\n\r\n\r\nfunction overlayClickModal(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closeModal(evt.target);\r\n  };\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      \r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}; \r\n\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector)\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector))\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig)\r\n};\r\n\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n","import '../pages/index.css';\r\n//import { initialCards } from './cards.js';\r\nimport { createCard, deleteCard, addLikeCard } from './card.js';\r\nimport { openModal, closeModal } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { getInfoProfile, getInitialCards, editProfileInfo, addNewCard, updateAvatarUser } from './api.js';\r\n\r\n\r\nconst cardsContainer = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst formProfile = popupEdit.querySelector('.popup__form');\r\nconst nameInput = formProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formProfile.querySelector('.popup__input_type_description');\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDscription = document.querySelector('.profile__description');\r\n\r\nconst popupImages = document.querySelector('.popup_type_image');\r\nconst popupImageLink = popupImages.querySelector('.popup__image');\r\nconst popupImageName = popupImages.querySelector('.popup__caption');\r\n\r\nconst newCard = document.forms['new-place'];\r\nconst formCard = newCard.querySelector('.popup__button');\r\nconst imageName = newCard['place-name'];\r\nconst imageLink = newCard.link;\r\n\r\nconst popupDeleteCard = document.querySelector('.popup_delete-image');\r\nconst popupDeleteCardButton = popupDeleteCard.querySelector('.popup__button');\r\n\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAvatar = popupAvatar.querySelector('.popup__form');\r\nconst inputAvaUrl = formAvatar.querySelector('.popup__input_type_url');\r\n\r\n/*const userId = {\r\n  _id: '',\r\n};*/\r\n\r\nlet cardToDelete = null;\r\n\r\n\r\nconst  validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n// загрузка данных\r\nfunction renderLoading(isLoading, button) {\r\n  if (isLoading) {\r\n    button.textContent = \"Сохранение...\";\r\n  } else {\r\n    button.textContent = \"Сохранить\";\r\n  }\r\n};\r\n\r\n\r\n// открытие модального окна картинки\r\nfunction openPopupImage(cardElement) {\r\n  if (cardElement.target.classList.contains(\"card__image\")) {\r\n    openModal(popupImages);\r\n    popupImageLink.src = cardElement.target.src;\r\n    popupImageLink.alt = cardElement.target.alt;\r\n    popupImageName.textContent = cardElement.target.alt;\r\n  }\r\n};\r\n\r\ncardsContainer.addEventListener('click', openPopupImage);\r\n\r\n\r\n// открытие модального окна редактирования профиля (карандаш)\r\nprofileEditButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  openModal(popupEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDscription.textContent;\r\n  clearValidation(popupEdit, validationConfig);\r\n});\r\n\r\n\r\n// редактирование данных профиля в модальном окне\r\nfunction processProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formProfile);\r\n\r\n  editProfileInfo({\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  })\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDscription.textContent = res.about;\r\n\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formProfile);\r\n    })\r\n};\r\n\r\n\r\n// сохранение отредактированных данных в профиле\r\nformProfile.addEventListener('submit', processProfileSubmit);\r\n\r\n\r\n// модальное окно изменения аватара\r\nprofileAvatar.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  openModal(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n\r\n// установка аватара в модальном окне\r\nfunction processAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading(true, formAvatar);\r\n  \r\n  updateAvatarUser(inputAvaUrl.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`\r\n\r\n      closeModal(popupAvatar)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formAvatar);\r\n    })\r\n};\r\n\r\n\r\nformAvatar.addEventListener('submit', processAvatarSubmit);\r\n\r\n\r\n// открытие модального окна добавления картинки (+)\r\naddButton.addEventListener('click', (evt) => {\r\n  evt.preventDefault();\r\n\r\n  openModal(popupNewCard);\r\n  clearValidation(popupNewCard, validationConfig);\r\n});\r\n\r\n\r\n// получаем новую картинку в список картинок\r\n function processNewCardSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const newCardObject = {\r\n    name: imageName.value,\r\n    link: imageLink.value,\r\n  }\r\n  \r\n  renderLoading(true, formCard);\r\n\r\n  addNewCard(newCardObject)\r\n    .then((res) => {\r\n      cardsContainer.prepend(createCard(\r\n        res, \r\n        res.owner._id, \r\n        openPopupImage,\r\n        processDeleteCardClick,\r\n        addLikeCard,\r\n      ));\r\n      \r\n      closeModal(popupNewCard);\r\n      newCard.reset();\r\n    })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    renderLoading(false, formCard);\r\n  })\r\n};\r\n\r\n\r\nnewCard.addEventListener('submit', processNewCardSubmit);\r\n\r\n\r\nfunction processDeleteCardClick (cardElement) {\r\n  cardToDelete = cardElement;\r\n  openModal(popupDeleteCard);\r\n}\r\n\r\n\r\npopupDeleteCardButton.addEventListener(\"click\", () => {\r\n  deleteCard(cardToDelete);\r\n  closeModal(popupDeleteCard);\r\n});\r\n\r\n\r\n// закрытие модальных окон (All)\r\npopupCloseButtons.forEach((item) => {\r\n  item.addEventListener('click', () => {\r\n    const popupToClose = item.closest('.popup');\r\n    closeModal(popupToClose);\r\n  });\r\n});\r\n\r\n\r\nPromise.all([getInfoProfile(), getInitialCards()])\r\n  .then(([user, newCard]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDscription.textContent = user.about;\r\n    profileAvatar.style.backgroundImage = `url(${user.avatar})`;\r\n    newCard.forEach((cardData) => {\r\n      cardsContainer.append(\r\n        createCard(cardData, user._id, openPopupImage, processDeleteCardClick, addLikeCard));\r\n      });\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n\r\n  enableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","res","ok","json","Promise","reject","concat","status","getLikesCard","cardId","fetch","method","then","deleteLikeCard","cardTemplate","document","querySelector","content","createCard","cardData","userId","openPopupImage","cardElement","cloneNode","cardImage","cardTitle","deleteButton","cardLikeButton","cardLikeValue","dataset","_id","textContent","name","src","link","alt","likes","length","checkLikeById","classList","add","owner","addEventListener","evt","newCard","target","closest","deleteCard","remove","catch","error","console","log","addLikeCard","id","array","map","includes","openModal","popup","closeModalEsc","overlayClickModal","closeModal","removeEventListener","key","contains","hideInputError","formElement","inputElement","validationConfig","errorElement","inputErrorClass","errorClass","clearValidation","buttonElement","submitButtonSelector","inputList","Array","from","querySelectorAll","inputSelector","forEach","toggleButtonState","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsContainer","profileEditButton","addButton","popupEdit","popupAvatar","popupNewCard","popupCloseButtons","formProfile","nameInput","jobInput","profileTitle","profileDscription","popupImages","popupImageLink","popupImageName","forms","formCard","imageName","imageLink","popupDeleteCard","popupDeleteCardButton","profileAvatar","formAvatar","inputAvaUrl","formSelector","renderLoading","isLoading","button","preventDefault","value","_ref","about","body","JSON","stringify","finally","avatar","style","backgroundImage","newCardObject","addNewCard","prepend","reset","item","all","_ref2","user","append","patternMismatch","setCustomValidity","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}